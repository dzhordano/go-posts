basePath: /api/v1
definitions:
  domain.UpdateUserInput:
    properties:
      name:
        type: string
      password:
        type: string
      suspended:
        type: boolean
      verificatio_verified:
        type: boolean
      verification_code:
        type: string
    type: object
  v1.createPostCommentInput:
    properties:
      data:
        minLength: 1
        type: string
    required:
    - data
    type: object
  v1.createUserPostInput:
    properties:
      description:
        minLength: 1
        type: string
      title:
        minLength: 1
        type: string
    required:
    - description
    - title
    type: object
  v1.dataResponse:
    properties:
      data: {}
    type: object
  v1.refreshInput:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  v1.response:
    properties:
      message:
        type: string
    type: object
  v1.tokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  v1.updatePostInput:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  v1.userSignInInput:
    properties:
      email:
        maxLength: 64
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  v1.userSignUpInput:
    properties:
      email:
        maxLength: 64
        type: string
      name:
        maxLength: 64
        minLength: 2
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8081
info:
  contact: {}
  description: '...'
  title: Go-Posts Api
  version: "1.0"
paths:
  /admin/auth/refresh:
    post:
      consumes:
      - application/json
      description: refresh admin's tokens
      operationId: admin-refresh-tokens
      parameters:
      - description: refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.refreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Refresh Tokens
      tags:
      - admins
  /admins/comments/{id}:
    delete:
      consumes:
      - application/json
      description: delete comment
      operationId: admin-delete-comment
      parameters:
      - description: comment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Delete Comment
      tags:
      - admins
  /admins/comments/{id}/censor:
    post:
      consumes:
      - application/json
      description: censor comment
      operationId: admin-censor-comment
      parameters:
      - description: comment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Censor Comment
      tags:
      - admins
  /admins/posts/{id}:
    delete:
      consumes:
      - application/json
      description: delete post
      operationId: admin-delete-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Delete Post
      tags:
      - admins
    put:
      consumes:
      - application/json
      description: alter post
      operationId: admin-alter-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      - description: update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.updatePostInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Alter Post
      tags:
      - admins
  /admins/posts/{id}/suspend:
    post:
      consumes:
      - application/json
      description: suspend post
      operationId: admin-suspend-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Suspend Post
      tags:
      - admins
  /admins/reports:
    get:
      consumes:
      - application/json
      description: get all available reports
      operationId: admin-get-all-reports
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Get Available Report
      tags:
      - admins
  /admins/reports/{id}:
    delete:
      consumes:
      - application/json
      description: deletes report by id
      operationId: admin-deal-report
      parameters:
      - description: report id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Deal Report
      tags:
      - admins
  /admins/sign-in:
    post:
      consumes:
      - application/json
      description: login for admin
      operationId: admin-signup
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Sign In
      tags:
      - admins
  /admins/users:
    get:
      consumes:
      - application/json
      description: get all users
      operationId: admin-get-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Get Users
      tags:
      - admins
  /admins/users/{id}:
    delete:
      consumes:
      - application/json
      description: delete user
      operationId: admin-delete-user
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Delete User
      tags:
      - admins
    get:
      consumes:
      - application/json
      description: get user by id
      operationId: admin-get-user-by-id
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Get User By Id
      tags:
      - admins
    put:
      consumes:
      - application/json
      description: alter user
      operationId: admin-alter-user
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Alter User
      tags:
      - admins
  /admins/users/{id}/comments:
    get:
      consumes:
      - application/json
      description: get all user's comments
      operationId: admin-get-user-comments
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Get User Comments
      tags:
      - admins
  /admins/users/{id}/posts:
    get:
      consumes:
      - application/json
      description: get all user's posts
      operationId: admin-get-user-posts
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Get User Posts
      tags:
      - admins
  /admins/users/{id}/suspend:
    post:
      consumes:
      - application/json
      description: suspend user
      operationId: admin-suspend-user
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - AdminAuth: []
      summary: Suspend User
      tags:
      - admins
  /posts:
    get:
      consumes:
      - application/json
      description: get all  posts
      operationId: get-all-posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Get All Posts
      tags:
      - posts
  /posts/{id}:
    get:
      consumes:
      - application/json
      description: get post by id
      operationId: get-post-by-id
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Get Post By Id
      tags:
      - posts
  /posts/{id}/comments:
    get:
      consumes:
      - application/json
      description: get post comments
      operationId: get-post-comments
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Get Post Comments
      tags:
      - posts
  /users/auth/refresh:
    post:
      consumes:
      - application/json
      description: refresh user's tokens
      operationId: user-refresh-tokens
      parameters:
      - description: refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.refreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Refresh Tokens
      tags:
      - users
  /users/comments/:
    get:
      consumes:
      - application/json
      description: get all user comments
      operationId: user-get-all-comments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Get All User Comments
      tags:
      - users
  /users/comments/{id}:
    delete:
      consumes:
      - application/json
      description: delete user comment
      operationId: delete-user-comment
      parameters:
      - description: comment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Delete User Comment
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update user comment
      operationId: update-user-comment
      parameters:
      - description: comment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Update User Comment
      tags:
      - users
  /users/posts:
    get:
      consumes:
      - application/json
      description: get all user's posts
      operationId: user-get-posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Get User Posts
      tags:
      - users
  /users/posts/{id}:
    delete:
      consumes:
      - application/json
      description: delete user post
      operationId: user-delete-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Delete User Post
      tags:
      - users
    post:
      consumes:
      - application/json
      description: create post by user
      operationId: user-create-post
      parameters:
      - description: create user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createUserPostInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Create User Post
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update user post
      operationId: user-update-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      - description: update user post
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.updatePostInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Update User Post
      tags:
      - users
  /users/posts/{id}/comment:
    post:
      consumes:
      - application/json
      description: create post comment
      operationId: user-post-comment
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      - description: create post comment
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createPostCommentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Create Post Comment
      tags:
      - users
  /users/posts/{id}/comments:
    get:
      consumes:
      - application/json
      description: get all user's post comments
      operationId: user-get-post-comments
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      - description: create post comment
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createPostCommentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Get User's Post Comments
      tags:
      - users
  /users/posts/{id}/like:
    post:
      consumes:
      - application/json
      description: user like post
      operationId: user-like-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: User Like Post
      tags:
      - users
  /users/posts/{id}/report:
    post:
      consumes:
      - application/json
      description: report a post to admins
      operationId: user-report-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: User Report Post
      tags:
      - users
  /users/posts/{id}/unlike:
    post:
      consumes:
      - application/json
      description: user unlike post
      operationId: user-unlike-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: User Unlike Post
      tags:
      - users
  /users/sign-in:
    post:
      consumes:
      - application/json
      description: login for users
      operationId: user-signin
      parameters:
      - description: account credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Sign In
      tags:
      - users
  /users/sign-up:
    post:
      consumes:
      - application/json
      description: registration endpoint for users
      operationId: user-signup
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Sign Up
      tags:
      - users
  /users/verify/{code}:
    post:
      consumes:
      - application/json
      description: verification endpoint for users
      operationId: user-verify
      parameters:
      - description: verification code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: User Verify
      tags:
      - users
securityDefinitions:
  AdminAuth:
    in: header
    name: Authorization
    type: apiKey
  UserAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
