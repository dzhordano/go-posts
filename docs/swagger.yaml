basePath: /api/v1
definitions:
  v1.createPostCommentInput:
    properties:
      data:
        minLength: 1
        type: string
    required:
    - data
    type: object
  v1.createUserPostInput:
    properties:
      description:
        minLength: 1
        type: string
      title:
        minLength: 1
        type: string
    required:
    - description
    - title
    type: object
  v1.dataResponse:
    properties:
      data: {}
    type: object
  v1.refreshInput:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  v1.response:
    properties:
      message:
        type: string
    type: object
  v1.tokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  v1.updatePostInput:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  v1.userSignInInput:
    properties:
      email:
        maxLength: 64
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  v1.userSignUpInput:
    properties:
      email:
        maxLength: 64
        type: string
      name:
        maxLength: 64
        minLength: 2
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8081
info:
  contact: {}
  description: '...'
  title: Go-Posts Api
  version: "1.0"
paths:
  /users/auth/refresh:
    post:
      consumes:
      - application/json
      description: refresh user's tokens
      operationId: user-refresh-tokens
      parameters:
      - description: refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.refreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Refresh Tokens
      tags:
      - users
  /users/comments/:
    get:
      consumes:
      - application/json
      description: get all user comments
      operationId: user-get-all-comments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Get All User Comments
      tags:
      - users
  /users/comments/{id}:
    delete:
      consumes:
      - application/json
      description: delete user comment
      operationId: delete-user-comment
      parameters:
      - description: comment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Delete User Comment
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update user comment
      operationId: update-user-comment
      parameters:
      - description: comment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Update User Comment
      tags:
      - users
  /users/posts:
    get:
      consumes:
      - application/json
      description: get all user's posts
      operationId: user-get-posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Get User Posts
      tags:
      - users
  /users/posts/{id}:
    delete:
      consumes:
      - application/json
      description: delete user post
      operationId: user-delete-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Delete User Post
      tags:
      - users
    post:
      consumes:
      - application/json
      description: create post by user
      operationId: user-create-post
      parameters:
      - description: create user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createUserPostInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Create User Post
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update user post
      operationId: user-update-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      - description: update user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.updatePostInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Update User Post
      tags:
      - users
  /users/posts/{id}/comment:
    post:
      consumes:
      - application/json
      description: create post comment
      operationId: user-post-comment
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      - description: create post comment
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createPostCommentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Create Post Comment
      tags:
      - users
  /users/posts/{id}/comments:
    get:
      consumes:
      - application/json
      description: get all user's post comments
      operationId: user-get-post-comments
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      - description: create post comment
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createPostCommentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: Get User's Post Comments
      tags:
      - users
  /users/posts/{id}/like:
    post:
      consumes:
      - application/json
      description: user like post
      operationId: user-like-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: User Like Post
      tags:
      - users
  /users/posts/{id}/unlike:
    post:
      consumes:
      - application/json
      description: user unlike post
      operationId: user-unlike-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: User Unlike Post
      tags:
      - users
  /users/sign-in:
    post:
      consumes:
      - application/json
      description: login for users
      operationId: user-signin
      parameters:
      - description: account credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Sign In
      tags:
      - users
  /users/sign-up:
    post:
      consumes:
      - application/json
      description: registration endpoint for users
      operationId: user-signup
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Sign Up
      tags:
      - users
securityDefinitions:
  AdminAuth:
    in: header
    name: Authorization
    type: apiKey
  UserAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
